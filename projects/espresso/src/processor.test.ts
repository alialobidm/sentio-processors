import assert from 'assert'
// import { TestProcessorServer } from '@sentio/sdk/testing'
import { before, describe, test } from 'node:test'
import { expect } from 'chai'

import { TestProcessorServer } from "@sentio/sdk/testing";

describe('Test Processor', () => {
  const service = new TestProcessorServer(() => import('./processor.js'))

  before(async () => {
    await service.start()
  })

  test('has valid config', async () => {
    const config = await service.getConfig({})
    assert(config.contractConfigs.length > 0)
  })

  test('check log', async () => {
    const data = '{"address":"0xac42e297b896db2cd0c2c1b47e348b7f489e70f1","topics":["0xc34977751f08a257da613aa9db576f9b4edca0aef20e5b401f9c590a4d0c8fed","0x0000000000000000000000000000000000000000000000000000000000000001"],"data":"0x00000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000c400000000000000000000000000000000000000000000000000000000000000ca00000000000000000000000000000000000000000000000000000000000000da40000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000000005600bc30b617d04aecad580cdb3445f97cea7310386cbb9a8b4e960fe77fad864bb0be3dbcfbee4b9c17ecfa6cdc31960aa25a1965afc4eaf215b9029d64a4cadff2c4154cf0e991db31e1a2d320bb4adac69a90c055389b053d13fcd86459cb2422c4ab7f04dfb1c2c877b9bbed0b7044a5544c025c6c8918e2e850cb097082e7b2d3b69cc5bdbb7f200923efa13d2e75c41f72da399d9234bb21664485a5494490f19d5d80bc4212281a4a60ead02ae38be702f585afc4e079a70dfe1d20c49700d393d8b32bc96f98f71d22d82a3fb2767e40c8a7c6dc77af74adb2a6a8498c903bc14f21128fe5ba9501a5dc0ec158a955ed2fb956e618240a562ba636019270f37dabc145bfbbcb10483e6e667ff6839937c150c6bd23ba151d62cdf9bdb6a246c19d767fd455497ac079628c6da38d703572155b4de1cac9756d9a5ad61a729c8a3d31bdeb246529c191afd5e6057e9e99378eb1b6f69343c221ef045c6170a7eb7555d1b736d6e2213e78d4cd3452150bac5f2adde2513efa10baa12204721e79378d649df1f907b10057133b00bea69105b02a4476a490876db4dd955132bfe9173be922f7d243302f739e7508fc2f793f8618df6c49d8466ab918d0df10f2b2a325b1858115b99faa753abef7179b478ae3814f56de72292f0697b55a60ae1440789c1a5ff48c23d4db15d1db90537791a8d1855d69fbe89055bb9d9aa1c28cbe08441a4447fbde991861a6d8e64df875fd3ae256e67f992f08b62415b272e04a3962e1dcfe6823994cc0464fd6dcdae260def21257ffbcee4f894f9532e5eea215df1c8416276c3dae7c7de77321b14655376cfff78aa3118f31e64061d6aee110a3146725013e643b46b269718da9b3c26b4b2a9cb85e7dba2e0fdfd1d2f04a744438d50a17d13a2f52bfab06de27e9b9133ed5f85cbe8c77669789a0ce61683888cd02c8b7321d05af4d07d2759e205ea479a3bd3d60beb1d74ffee0fe6873d5dd5a409d748e3d7d9011852267461fb7071351489d21e13c30ce0b52e0f32bea9227f54603315609eb8a3905c707ef791f33de2d7678c08e3a5fc0e0e96bbd9be774a3ce9674a40a1fa4505dc4770937a2218ec7f4051ce2ac7f27a21dc0e37c2b72fbb655c70fd7b1f31b0af10b8860c7b0280f92abcaac2ae54be27c4acfdb58babea53c6d4f3a2c027c02d1715ba98eb97cc1a8c1d16a088bc342b8abcbf415da359bc3818ba3687351dbf374a4c03ccd96970ab1a3918fc16330128f5edf324a838c2bc760b947ca92c8ee2003894d169df63cfacf8ce09f7f726f97a0b4caf97ac45ee417029b8937f119dd0c1558c7feaa502f2cfcfa943b91022600006e13f9b4f36bb6a57e7eaac06deb7ae8714b67e2c2420131b817dfb06db582ae3df4c4926fe9b47156f50023e8dda630daf7dcb64aa73ec76da92781790e6ec145d8d1cb29cc1c0d35c96cb9c4995924e14aab21588710aefec584f2d32d623c323b827384300ade858eb32b24e78d15ac220c7a64a6393945636001a5acf1f928c47c4a250f5db64fa7ffc2250ea44c391d6cdc4ed44834b3378602440afaf3460dc56717dbac96fcdc15b766981096cc84da576c0941f686a9acf00000000000000000000000000000000000000000000000000000000000005e00000000000000000000000000000000000000000000000000000000000000900000000000000000000000000000000000000000000000000000000000000000228d58b1457ffe4b4be5480b79191da58fe91783d770085d3b7bbc15ec47988871731aee9e235d62992c7397f2ff3b8576aa47bd48f222b5454c9b30cc3ccc153000000000000000000000000000000000000000000000000000000000000000315c54c3ba4c4889a62ea6ec50c05ec2a5c3b89c696b55c6645de4740b0159a380af1295fa6c58ce5673a2684248840c9a42004f700374c3bd6c72ae1e94d9d932c35240bb40a9b13b2d146db0d17deef9b27a49e54453e905692b65ba539577609295c6ed095af0e52b0241cbd97096e6c0098b266059d4927bc0298a763461b2dec0a2b8309a2d2849b0ba60f055852fff25626bfcf895a813015a480f1b50a0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000001501c305ef9a5d0a1df8b6eef8f2d2c8a719f4b6b3fee6e280c6ff2e8b303099be0e2fe57707414cbab0ad7ecb3b0e26012946e84f2fa06324e61d5a46e325fd96207bc5d8553660f1253330f8b91d8fcfa6257de7523a2fb390a503bda75ae89114d9c544a5343cdd3b87d53bac9b0e398fe0a8e5d73e80553b5be8d3681d3031075fe0fb9e75cea077a368f2803f5f540b4e29fc5810583e5a1a4cfc55ff3d001c789d0b7c31f0b840dd94555702b05a9f571d35298b85a0e40a72c8b5c8d3862628167027b7ef9aa708475887c9822c9ac7b585f9d437ccb0c346a3017e210d303d1045f6100667cf8437165db96bb93d4fb9e7a2ca1d44f76e3003c40006210467b42c35258ee77570ec17852a431e0cae2702ced2ad4fdd45e7b7367a64c525767eb745c5cad91616d0074063b6cc1a809b13e58aefb633ce10a575f4b1231910c74e85e920283a6bf9f5f1a674660e0c2e7f698a8dc0fb5e30fa92dd002e2f93a2158494363dc25fc86a1be5787a16f20453ae69c7f68f6efdeb61821eee2346c688507a9185e3f9e7c8fa9d1f184e7aa2b1ba26fe90b87d087f70853796176e3285569400491a084d33dff2dc7e115e3233c3b70034269e2c8c3339431e289d7c0fc9604eb2b9ccfb7b6f0c41da4a4f0b0f95a1b0b801764954dce6c97c055cf71218b98dd5502e69061fc3844680a2f70519a1a96fda0b51abbc94484d2fb31620bdaa3ef208aac63bf41c5eef05447841b237619914de9f5e89716f0d29e24599592d2fc8c8bf351cca2a7f1f8ca57c3c37c4f507ee1b8f6a6557a2b514f8e167538c404e8f0f785e621f719c39188d54a9f4ffe5061c89b51c3f4b801d39ba62a317a19e34cf90f001e246eb3fa24d454d4d494699547f732be0aefd2c6edd1f16386c8678e64d4dd186d0716de0054db6708e85d586d1865393180918ba8df7bc1d447080d4e9f585393a71540e2d8aaa241055e0910910e1147607000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fffff02ffa7444e37583a2a83ee1670ccc7857bdd9d0aff9cb54cf1543652504e42351660b7aacd398ae08e24f41414f443ff3be6dd640255b8d2e1a73fdbc6d5541200000000000000000000000000000000000000000000000000000000000000cblockNumber":"0x715a77","transactionHash":"0x3acc0aae7e125247c7595ebd9646a3559fd2351535312b75367abef5ccb76830","transactionIndex":"0x1b","blockHash":"0x815f3817a8edf24b877a177373f6c7831e180404db43f22724d5afee4f4a5883","logIndex":"0x5f","removed":false}\n'

    // const data = '{"data":"0x00000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001a00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000026000000000000000000000000000000000000000000000000000000000000002c00000000000000000000000000000000000000000000000000000000000000320000000000000000000000000000000000000000000000000000000000000000206c56cfa4b149b0b7295e38dace365d0a0874879607dcbc34386164631750a7a01c507bb004cca656c66d9531df55f7d3d438974b95e0715d631187e5b2e8alogIndex":"0x1e","address":"0xbE7B63032BC975AD57feDB39E887f7dD3486d674","topics":["0xc34977751f08a257da613aa9db576f9b4edca0aef20e5b401f9c590a4d0c8fed","0x0000000000000000000000000000000000000000000000000000000000000021"],"transactionHash":"0xc8800f6687b77540270a3b1a3d2adc25baed3120598f01c52d38e8bc94e437c7","removed":false,"blockHash":"0x4e64936dce19654cb5acd5fd7014e836231ab924ca70003403aabb8c85f0e6da","blockNumber":"0x6ba29d","transactionIndex":"0x17"}'

    const resp = await service.eth.testLog(
        JSON.parse(data),
        5 as any
    )

    console.log(resp)
  })
})
